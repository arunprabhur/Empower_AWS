#Paramters

Parameters:
  S3BucketName:
    Description: Please Enter S3 bucket name where we have empower setup
    Type: String
  DBInstanceID:
    Default: EmpowerDBInstance
    Description: Empower database instance
    Type: String
    MinLength: '1'
    MaxLength: '63'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: >-
      Must begin with a letter and must not end with a hyphen or contain two
      consecutive hyphens.
  DBName:
    Default: empowerdb
    Description: My database
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: Must begin with a letter and contain only alphanumeric characters.
  DBUsername:
    NoEcho: 'true'
    Description: Username for MySQL database access
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    NoEcho: 'true'
    Description: Password MySQL database access
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.   
Resources:
#security group for EC2
  SSHSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription:  'Security Group to allow SSH'
        SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
        Tags:
        - Key: Name
          Value: SSH_SecurityGroup

  HTTPWebAccessSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: 'Security Group to allow port 8080'
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        Tags:
        - Key: Name
          Value: HTTP_Web_Access_SecurityGroup

# IAM Role for accessing S3 bucket
  S3ReadOnlyRole: 
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - Effect: "Allow"
            Principal: 
              Service: 
                - "ec2.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
  S3ReadPolicyGetObjectOnly: 
    Type: "AWS::IAM::Policy"
    Properties: 
      PolicyName: "S3ReadPolicy-GetObjectOnly"
      PolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - Effect: "Allow"
            Action: "s3:GetObject"
            Resource: !Join
                        - ''
                        - - 'arn:aws:s3:::'
                          - !Ref S3BucketName
                          - '/*'
      Roles: 
        - Ref: "S3ReadOnlyRole"
  EmpowerEC2InstanceProfile: 
    Type: "AWS::IAM::InstanceProfile"
    Properties: 
      Path: "/"
      Roles: 
        - Ref: "S3ReadOnlyRole"


# EC2 Instance for Empower

  EmpowerInstance:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: us-east-1a
      ImageId: ami-0583d8c7a9c35822c
      InstanceType: t3.micro
      IamInstanceProfile: !Ref EmpowerEC2InstanceProfile
      KeyName: "MySSHKeyPair_Laptop"
      SecurityGroups:
        - !Ref SSHSecurityGroup
        - !Ref HTTPWebAccessSecurityGroup
      UserData: 
        Fn::Base64: |
          #!/bin/bash -xe
          dnf install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
          systemctl enable amazon-ssm-agent
          systemctl start amazon-ssm-agent
          dnf install -y java-21-openjdk.x86_64
          dnf install -y unzip
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "/home/ec2-user/awscliv2.zip"
          unzip /home/ec2-user/awscliv2.zip
          ./aws/install
          alias aws=/usr/local/bin/aws
      Tags:
        - Key: Name
          Value: Empower_server

  EmpowerDB:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      DBInstanceIdentifier: !Ref DBInstanceID
      DBName: !Ref DBName
      DBInstanceClass: db.t3.micro
      AllocatedStorage: '20'
      Engine: postgres
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword

#Outputs:

Outputs:
  PublicIp:
    Description: Server Public IP
    Value: !GetAtt EmpowerInstance.PublicIp
    Export:
      Name: !Sub "${AWS::StackName}-Empower-Instance-PublicIp"
